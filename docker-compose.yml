version: "3"
services:
  prisma:
    image: prismagraphql/prisma:1.32
    restart: always
    ports:
    - "4466:4466"
    environment:
      PRISMA_CONFIG: |
        port: 4466
        # uncomment the next line and provide the env var PRISMA_MANAGEMENT_API_SECRET=my-secret to activate cluster security
        # managementApiSecret: my-secret
        databases:
          default:
            connector: postgres
            host: postgres
            user: prisma
            password: prisma
            rawAccess: true
            port: 5432
            migrations: true
  postgres:
    image: postgres:10.3
    restart: always
    # Uncomment the next two lines to connect to your your database from outside the Docker environment, e.g. using a database GUI like Postico
    # ports:
    # - "5432:5432"
    environment:
      POSTGRES_USER: prisma
      POSTGRES_PASSWORD: prisma
    volumes:
      - postgres:/var/lib/postgresql/data
  # apollo:
  #   build:
  #     context: .
  #     dockerfile: ./Dockerfile
  #   image: 196309159802.dkr.ecr.us-west-2.amazonaws.com/techindex:latest
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   restart: always
  #   ports:
  #     - "4000:4000"
  #   command: ["yarn", "dev"]
  #   environment:
  #     - RHOST=redis
  #   depends_on:
  #     - redis
  #     - prisma
  redis:
    image: redis:alpine
    command: ["redis-server", "--appendonly", "yes"]
    hostname: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis:/data
    healthcheck:
      test: '[ $$(redis-cli ping) = "PONG" ] || exit 1 ]'
      timeout: 2s
      interval: 5s
      retries: 5
volumes:
  redis:
  postgres:
